IF(WIN32)
	IF(CALVR_WIN_DYNAMIC)
		ADD_DEFINITIONS(-DCVRINPUT_LIBRARY)
	ELSE(CALVR_WIN_DYNAMIC)
		ADD_DEFINITIONS(-DCVRINPUT_LIBRARY_STATIC)
	ENDIF(CALVR_WIN_DYNAMIC)
ENDIF(WIN32)

SET(LIB_NAME cvrInput)
SET(HEADER_PATH ${CalVR_SOURCE_DIR}/include/${LIB_NAME})
SET(LIB_PUBLIC_HEADERS
    ${HEADER_PATH}/TrackingManager.h
    ${HEADER_PATH}/TrackerBase.h
    ${HEADER_PATH}/TrackerShmem.h
    ${HEADER_PATH}/TrackerSlave.h
    ${HEADER_PATH}/TrackerMouse.h
    ${HEADER_PATH}/TrackerPlugin.h
    ${HEADER_PATH}/Export.h
)

SET(EXTRA_SOURCE)

FIND_PACKAGE(VRPN)
FIND_PACKAGE(Omicron)

IF(VRPN_FOUND)
    SET(LIB_PUBLIC_HEADERS ${LIB_PUBLIC_HEADERS} ${HEADER_PATH}/TrackerVRPN.h)
    SET(LIB_PUBLIC_HEADERS ${LIB_PUBLIC_HEADERS} ${HEADER_PATH}/TrackerGyroMouse.h)
    SET(EXTRA_SOURCE ${EXTRA_SOURCE} TrackerVRPN.cpp)
    SET(EXTRA_SOURCE ${EXTRA_SOURCE} TrackerGyroMouse.cpp)
ENDIF(VRPN_FOUND)

IF(OMICRON_FOUND)
    SET(LIB_PUBLIC_HEADERS ${LIB_PUBLIC_HEADERS} ${HEADER_PATH}/TrackerOmicron.h)
    SET(EXTRA_SOURCE ${EXTRA_SOURCE} TrackerOmicron.cpp)
ENDIF(OMICRON_FOUND)


###KINECT


#SET(LIB_PUBLIC HEADERS ${LIB_PUBLIC_HEADERS}
#${HEADER_PATH}/TrackerKinect.h)
#SET(EXTRA_SOURCE ${EXTRA_SOURCE} TrackerKinect.cpp)
#SET(REMOTEKINECT_PATH /home/calvr/3rdServer/RemoteKinect/)
#INCLUDE_DIRECTORIES(${REMOTEKINECT_PATH})

#SET(LIB_PUBLIC_HEADERS ${LIB_PUBLIC_HEADERS}
#${REMOTEKINECT_PATH}/protocol/skeletonframe.pb.h
#${REMOTEKINECT_PATH}/protocol/skeleton.pb.h
#${REMOTEKINECT_PATH}/protocol/packing.pb.h)

#SET(EXTRA_SOURCE ${EXTRA_SOURCE}
#${REMOTEKINECT_PATH}/protocol/skeletonframe.pb.cc
#${REMOTEKINECT_PATH}/protocol/skeleton.pb.cc
#${REMOTEKINECT_PATH}/protocol/packing.pb.cc)


###/KINECT


SET(LIB_SRC_FILES
    ${EXTRA_SOURCE}
    TrackingManager.cpp
    TrackerShmem.cpp
    TrackerPlugin.cpp
    TrackerSlave.cpp
    TrackerMouse.cpp
)

SET(LIB_EXTERNAL_INCLUDES
    ${OSG_INCLUDE_DIR}
)

#SET(OSG_LIBRARIES
 #   ${OSG_LIBRARIES}
  #  "-lprotobuf -lzmq -luuid -lsnappy")

SET(LIB_EXTERNAL_LIBRARIES
    ${OSG_LIBRARIES}
)

SET(LIB_INTERNAL_LIBRARIES
    config
    util
    kernel
)

IF(VRPN_FOUND)
    ADD_DEFINITIONS(-DWITH_VRPN)
    SET(LIB_EXTERNAL_INCLUDES ${LIB_EXTERNAL_INCLUDES} ${VRPN_INCLUDE_DIR})
    SET(LIB_EXTERNAL_LIBRARIES ${LIB_EXTERNAL_LIBRARIES} ${VRPN_LIBRARY})
ENDIF(VRPN_FOUND)

IF(OMICRON_FOUND)
    ADD_DEFINITIONS(-DWITH_OMICRON)
    SET(LIB_EXTERNAL_INCLUDES ${LIB_EXTERNAL_INCLUDES} ${OMICRON_INCLUDE_DIR})
ENDIF(OMICRON_FOUND)

SETUP_CORE_LIBRARY(${LIB_NAME})
